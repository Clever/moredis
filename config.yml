# List caches to create
caches:
  -
    #  a name for your cache, this name will be the one you enter as
    #  the cache command line parameter.
    name: "example"

    # Here you can define which MongoDB collections you want to query from.  You can build
    # multiple maps from each collection, and each top level cache can be made from multiple collections.
    collections:
      -
        # collection is the collection you wish to query
        collection: "example-collection"

        # query is the query we will execute on the collection, represented as a JSON object.
        # Queries can be paramaterized, with paramaters passed in on the command line.
        # Substitution of params is done using go's text/template package.  Additionally,
        # any string which can be identified as a MongoDB ObjectId hex identifier will be
        # treated like an ObjectId.
        query: '{}'

        # maps defines the maps that will be made from the documents returned by the above query.
        # For example, the below config will look at every document in the example-collection collection
        # and map the value of the 'field' field to the value of the '_id' field.
        maps:
          -
            # name is the name to store the mapping as in redis.
            # Name can be paramaterized the same as query, using parameters passed in on the command line.
            name: "example:mapping"

            # key is the key to use in your map on redis.  keys can be paramaterized using fields
            # from the documents returned by your query.  Note that ObjectIds will need to be converted
            # to strings for storage in redis, you can do this using the toString template function.
            key: "{{.field}}"

            # val is the value to be stored for the key specified above.  Values can be paramaterized
            # using fields from the documents returned by your query.  Note that ObjectIds will need to be converted
            # to strings for storage in redis, you can do this using the toString template function.
            val: "{{toString ._id}}"

